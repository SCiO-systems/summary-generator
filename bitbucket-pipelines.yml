image: python:3.10-bullseye

pipelines:
  branches:
    release/development:
      - step:
          name: Unit tests
          runs-on:
            - 'runner2'
          script:
            - ls -alh
            - curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
            - apt-get install git-lfs -y
            - git lfs install
            - git clone https://huggingface.co/pszemraj/long-t5-tglobal-base-16384-booksci-summary-v1 models/long-t5-tglobal-base-16384-booksci-summary-v1
            - pip install --no-cache-dir -r requirements.txt
            - coverage run test_summarizer.py
            - coverage report -i
            - coverage xml
            - ls -alh
      - step:
          name: Code review
          runs-on:
            - 'runner2'
          image: jetbrains/qodana-python:2023.2
          caches:
            - qodana    
          script:
            - export QODANA_TOKEN=${QODANA_TOKEN}  # Export the environment variable
            - qodana --results-dir=${BITBUCKET_CLONE_DIR}/.qodana --report-dir=${BITBUCKET_CLONE_DIR}/.qodana/report --cache-dir=${BITBUCKET_CLONE_DIR}/.qodana/cache
          artifacts:
            - .qodana/report
      - step:
          name: Fetch .env file from S3
          image: amazon/aws-cli
          script:
            - aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
            - aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
            - aws configure set default.region ${AWS_REGION}
            - aws s3 cp s3://scio-project-envs/python/${BITBUCKET_REPO_SLUG}/dev.env .env
          artifacts:
            - .env
      - step:
          name: Building & pushing Docker image
          runs-on:
            - 'runner2'
          services:
            - docker
          caches:
            - docker
          script:
            - docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
            - docker build . -t ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:dev
            - docker push ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:dev
      - step:
          name: "E-mail notification"
          script:
          - ALERT_TYPE="SUCCESS"
          - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then ALERT_TYPE="FAIL"; fi
          - pipe: atlassian/email-notify:0.9.0
            variables:
              USERNAME: ${SMTP_USERNAME}
              PASSWORD: ${SMTP_PASSWORD}
              HOST: ${SMTP_HOST}
              PORT: ${SMTP_PORT}
              FROM: "devops@scio.systems"
              TO: "dev@scio.systems"
              SUBJECT: '${ALERT_TYPE}: Bitbucket Pipe Notification for ${BITBUCKET_REPO_SLUG} - ${BITBUCKET_BRANCH}'
  
definitions:
  caches:
    qodana: .qodana/cache

    # release/staging:
    #   - step:
    #       name: Fetch .env file from S3
    #       image: amazon/aws-cli
    #       script:
    #         - aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
    #         - aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
    #         - aws configure set default.region ${AWS_REGION}
    #         - aws s3 cp s3://scio-project-envs/python/${BITBUCKET_REPO_SLUG}/dev.env .env
    #       artifacts:
    #         - .env
    #   - step:
    #       name: Build, run tests, analyze on SonarQube
    #       size: 2x
    #       services:
    #         - docker-build
    #       script:
    #         - pip install coverage
    #         - coverage run test_summarizer.py
    #         - coverage report -i
    #   - step:
    #       name: Building & pushing Docker image
    #       services:
    #         - docker-build
    #       caches:
    #         - docker
    #       script:
    #         - docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
    #         - docker build . -t ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:dev
    #         - docker push ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:dev
    #   - step:
    #       name: "E-mail notification"
    #       script:
    #       - ALERT_TYPE="SUCCESS"
    #       - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then ALERT_TYPE="FAIL"; fi
    #       - pipe: atlassian/email-notify:0.9.0
    #         variables:
    #           USERNAME: ${SMTP_USERNAME}
    #           PASSWORD: ${SMTP_PASSWORD}
    #           HOST: ${SMTP_HOST}
    #           PORT: ${SMTP_PORT}
    #           FROM: "devops@scio.systems"
    #           TO: "dev@scio.systems"
    #           SUBJECT: '${ALERT_TYPE}: Bitbucket Pipe Notification for ${BITBUCKET_REPO_SLUG} - ${BITBUCKET_BRANCH}'
    # release/production:
    #       - step:
    #           name: Fetch .env file from S3
    #           image: amazon/aws-cli
    #           script:
    #             - aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
    #             - aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
    #             - aws configure set default.region ${AWS_REGION}
    #             - aws s3 cp s3://scio-project-envs/python/${BITBUCKET_REPO_SLUG}/prod.env .env
    #           artifacts:
    #             - .env
    #       - step:
    #           name: Building & pushing Docker image
    #           services:
    #             - docker-build
    #           caches:
    #             - docker
    #           script:
    #             - docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
    #             - docker build . -t ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:prod
    #             - docker push ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:prod
    #       - step:
    #           name: "Deployment (prod)"
    #           deployment: prod
    #           script:           
    #             - pipe: atlassian/scp-deploy:1.4.0
    #               variables:
    #                 USER: ${DEFAULT_SSH_USER}
    #                 SERVER: ${HOST}
    #                 SSH_KEY: ${DEFAULT_SSH_KEY}
    #                 REMOTE_PATH: '/home/${DEFAULT_SSH_USER}'
    #                 LOCAL_PATH: 'docker-compose.yml'
    #                 EXTRA_ARGS: ["-P", "${DEFAULT_SSH_PORT}", "-o", "StrictHostKeyChecking=no"]
    #                 DEBUG: 'true'
    #             - pipe: atlassian/ssh-run:0.5.0
    #               variables:
    #                 SSH_USER: ${DEFAULT_SSH_USER}
    #                 SERVER: ${HOST}
    #                 PORT: ${DEFAULT_SSH_PORT}
    #                 SSH_KEY: ${DEFAULT_SSH_KEY}
    #                 MODE: 'script'
    #                 COMMAND: 'deploy.sh'
    #                 ENV_VARS: >-
    #                   ENV=prod
    #                   DOCKERHUB_USERNAME=${DOCKERHUB_USERNAME}
    #                   DOCKERHUB_PASSWORD=${DOCKERHUB_PASSWORD}
    #                   BITBUCKET_REPO_SLUG=${BITBUCKET_REPO_SLUG}
    #                   DEFAULT_SSH_USER=${DEFAULT_SSH_USER}
    #       - step:
    #           name: "E-mail notification"
    #           script:
    #           - ALERT_TYPE="SUCCESS"
    #           - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then ALERT_TYPE="FAIL"; fi
    #           - pipe: atlassian/email-notify:0.9.0
    #             variables:
    #               USERNAME: ${SMTP_USERNAME}
    #               PASSWORD: ${SMTP_PASSWORD}
    #               HOST: ${SMTP_HOST}
    #               PORT: ${SMTP_PORT}
    #               FROM: "devops@scio.systems"
    #               TO: "dev@scio.systems"
    #               SUBJECT: '${ALERT_TYPE}: Bitbucket Pipe Notification for ${BITBUCKET_REPO_SLUG} - ${BITBUCKET_BRANCH}'